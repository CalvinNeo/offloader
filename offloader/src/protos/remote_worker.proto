// Copyright 2025 PingCAP, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package remote_worker;

message RemoteDMFile {
    uint64 file_id = 1;
    uint64 page_id = 2;
    string parent_path = 3;
    uint32 meta_version = 4;
}

message BuildVectorIndexReq {
    repeated RemoteDMFile dmfiles = 1;
}

message BuildVectorIndexResp {
    repeated RemoteDMFile dmfiles = 1;
}

message OffloadingReq {
    uint64 id = 1;
    oneof task {
        // The specific task for build vector index
        BuildVectorIndexReq build_vector_index_req = 2;
    }
}

message OffloadingResp {
    uint64 id = 1;
    oneof task {
        BuildVectorIndexResp build_vector_index_resp = 2;
    }
}

message TiFlashCallerInfo {
    uint64 store_id = 1;
    uint64 task_trace_id = 2;
}

message CallerInfo {
    oneof caller_info {
        TiFlashCallerInfo tiflash_caller_info = 1;
    }
}

message DispatchTaskRequest {
    CallerInfo caller = 1;
    repeated OffloadingReq requests = 2;
}

message DispatchTaskOngoingResp {

}

message DispatchTaskFailedResp {
    string failed_reason = 1;
}

message DispatchTaskSucceedResp {
    repeated OffloadingResp responses = 1;
}

message DispatchTaskResponse {
    CallerInfo caller = 1;
    oneof response {
        DispatchTaskSucceedResp succeed = 2;
        DispatchTaskOngoingResp ongoing = 3;
        DispatchTaskFailedResp failed = 4;
    }
}

message OffloadingReq {
    uint64 id = 1;
    oneof task {
        // The specific task for build vector index
        BuildVectorIndexReq build_vector_index_req = 2;
    }
}

message OffloadingResp {
    uint64 id = 1;
    oneof task {
        BuildVectorIndexResp build_vector_index_resp = 2;
    }
}

message TiFlashCallerInfo {
    uint64 store_id = 1;
    uint64 segment_id = 2;
}

message CallerInfo {
    oneof caller_info {
        TiFlashCallerInfo tiflash_caller_info = 1;
    }
}

message DispatchTaskRequest {
    CallerInfo caller = 1;
    repeated OffloadingReq requests = 2;
}

message DispatchTaskOngoingResp {

}

message DispatchTaskFailedResp {
    string failed_reason = 1;
}

message DispatchTaskSucceedResp {
    repeated OffloadingResp responses = 1;
}

message FetchTaskRequest {
    CallerInfo caller = 1;
}

message FetchTaskResponse {
    CallerInfo caller = 1;
    oneof response {
        DispatchTaskSucceedResp succeed = 2;
        DispatchTaskOngoingResp ongoing = 3;
        DispatchTaskFailedResp failed = 4;
    }
}